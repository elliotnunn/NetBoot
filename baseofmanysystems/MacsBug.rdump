data 'vers' (1) {
	$"0622 8000 0000 0536 2E32 2E32 2536 2E32"            /* .".....6.2.2%6.2 */
	$"2E32 2C20 4170 706C 6520 436F 6D70 7574"            /* .2, Apple Comput */
	$"6572 2C20 496E 632E 2031 3938 312D 3139"            /* er, Inc. 1981-19 */
	$"3931"                                               /* 91 */
};

data 'vers' (2, purgeable) {
	$"0622 8000 0000 0536 2E32 2E32 0D4D 6163"            /* .".....6.2.2.Mac */
	$"7342 7567 2036 2E32 2E32"                           /* sBug 6.2.2 */
};

data 'mxbg' (0) {
	$"114D 6163 7342 7567 2036 2E32 2E32 2020"            /* .MacsBug 6.2.2   */
	$"2020"                                               /*    */
};

data 'BNDL' (128) {
	$"6D78 6267 0000 0001 4943 4E23 0000 0000"            /* mxbg....ICN#.... */
	$"0080 4652 4546 0000 0000 0080"                      /* ..FREF...... */
};

data 'FREF' (128) {
	$"6462 6772 0000 00"                                  /* dbgr... */
};

data 'ICN#' (128, purgeable) {
	$"0000 0010 0000 0010 0000 0028 0000 0028"            /* ...........(...( */
	$"0000 0024 0000 0044 0000 0044 0000 0082"            /* ...$...D...D.... */
	$"001F 008A 0020 C08A 0040 2082 0040 2044"            /* ..... ...@ ..@ D */
	$"01F0 1038 01F0 1000 03F8 0800 0FFE 0901"            /* ...8............ */
	$"1FFF 0812 3FFF 8480 3FFF 8448 7FFB C200"            /* ....?...?..H.... */
	$"7FFF C1D5 7FFD C000 7FFD C088 7FFD C024"            /* ...............$ */
	$"7FFB C100 7FFF C221 3FEF 8000 3FFF 8020"            /* .......!?...?..  */
	$"1FFF 0000 0FFE 0000 03F8 0000 0000 0000"            /* ................ */
	$"0000 0010 0000 0010 0000 0038 0000 0038"            /* ...........8...8 */
	$"0000 003C 0000 007C 0000 007C 001F 00FE"            /* ...<...|...|.... */
	$"003F C0FE 0060 E0FE 0040 30FE 03F8 307C"            /* .?...`...@0...0| */
	$"03F8 1838 03F8 1800 0FFE 0C01 1FFF 0D81"            /* ...8............ */
	$"3FFF 8C1B 7FFF C6C0 7FFF C66C FFFF E380"            /* ?..........l.... */
	$"FFFF E1FF FFFF E000 FFFF E0CC FFFF E036"            /* ...............6 */
	$"FFFF E180 FFFF E331 7FFF C001 7FFF C030"            /* .......1.......0 */
	$"3FFF 8000 1FFF 0000 0FFE 0000 03F8 0000"            /* ?............... */
};

data 'ics#' (128, purgeable) {
	$"0004 000A 000A 0711 0891 3E51 3E4E 7F20"            /* ..........>Q>N.  */
	$"FFA0 FD92 FD88 FBA2 FF89 7F04 3E10 0002"            /* ............>... */
	$"0004 000E 0F0E 0F9F 3EDF 3F7F 7F6E FFB0"            /* ........>.?..n.. */
	$"FFF0 FFDB FFCC FFF3 FFCD FF86 7F18 1E03"            /* ................ */
};

data 'icl8' (128, purgeable) {
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 00FF 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 00FF 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 FFC0 FF00 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 FF00 FF00 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 FFC0 00FF 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 00FF C000 C0FF 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 00FF 00C0 00FF 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 FF00 C000 C000 FF00"            /* ................ */
	$"0000 0000 0000 0000 0000 00FF FFFF FFFF"            /* ................ */
	$"0000 0000 0000 0000 FFC0 00C0 ECC0 FF00"            /* ................ */
	$"0000 0000 0000 0000 0000 FF00 0000 0000"            /* ................ */
	$"FFFF 0000 0000 0000 FF00 C000 EC00 FF00"            /* ................ */
	$"0000 0000 0000 0000 00FF 0000 0000 0000"            /* ................ */
	$"0000 FF00 0000 0000 FFC0 00C0 00C0 FF00"            /* ................ */
	$"0000 0000 0000 0000 00FF 0000 0000 0000"            /* ................ */
	$"0000 FF00 0000 0000 00FF C000 C0FF 0000"            /* ................ */
	$"0000 0000 0000 00FF FFFF FFFF 0000 0000"            /* ................ */
	$"0000 00FF 0000 0000 0000 FFFF FF00 0000"            /* ................ */
	$"0000 0000 0000 00FF FBFB FBFF 0000 0000"            /* ................ */
	$"0000 00FF 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 FFFB FBFB FBFB FF00 0000"            /* ................ */
	$"0000 0000 FF00 0005 0000 0000 0000 0005"            /* ................ */
	$"0000 0000 FFFF FBFB FBFB FBFB FBFF FF00"            /* ................ */
	$"0000 0000 FF00 05FF 0500 0005 0000 05FF"            /* ................ */
	$"0000 00FF FBFB FBFB FBFB FBFB FBFB FBFF"            /* ................ */
	$"0000 0000 FF00 0005 0500 05FF 0505 FF05"            /* ................ */
	$"0000 FFFB FBFB FBFB FBFB FBFB FBFB FBFB"            /* ................ */
	$"FF00 0000 00FF 0005 FF05 0005 0500 0500"            /* ................ */
	$"0000 FFFB FBFB FBFB FBFB FBFB FBFB FBFB"            /* ................ */
	$"FF00 0000 00FF 0000 05FF 0505 FF05 0000"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FB00 FBFB"            /* ................ */
	$"FBFF 0000 0000 FF00 0005 0005 0505 0005"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FBFB FBFB"            /* ................ */
	$"FBFF 0000 0000 00FF FFFF 05FF 05FF 05FF"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FBFB 00FB"            /* ................ */
	$"FBFF 0000 0000 0000 0500 0005 0505 0005"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FBFB 00FB"            /* ................ */
	$"FBFF 0000 0000 0005 FF05 0505 FF05 0000"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FBFB 00FB"            /* ................ */
	$"FBFF 0000 0000 0005 0505 FF05 05FF 0500"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FB00 FBFB"            /* ................ */
	$"FBFF 0000 0000 05FF 0500 0500 0005 0005"            /* ................ */
	$"00FF FBFB FBFB FBFB FBFB FBFB FBFB FBFB"            /* ................ */
	$"FBFF 0000 0005 FF05 0005 FF05 0000 05FF"            /* ................ */
	$"0000 FFFB FBFB FBFB FBFB FB00 FBFB FBFB"            /* ................ */
	$"FF00 0000 0000 0500 0000 0500 0000 0005"            /* ................ */
	$"0000 FFFB FBFB FBFB FBFB FBFB FBFB FBFB"            /* ................ */
	$"FF00 0000 0000 0000 0005 FF05 0000 0000"            /* ................ */
	$"0000 00FF FBFB FBFB FBFB FBFB FBFB FBFF"            /* ................ */
	$"0000 0000 0000 0000 0000 0500 0000 0000"            /* ................ */
	$"0000 0000 FFFF FBFB FBFB FBFB FBFF FF00"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 FFFF FFFF FFFF FF00 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
};

data 'icl4' (128, purgeable) {
	$"0000 0000 0000 0000 0000 0000 000F 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 000F 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 00F7 F000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 00F0 F000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 00F7 0F00"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0F70 7F00"            /* .............p.. */
	$"0000 0000 0000 0000 0000 0000 0F07 0F00"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 F070 70F0"            /* .............pp. */
	$"0000 0000 000F FFFF 0000 0000 F707 67F0"            /* ..............g. */
	$"0000 0000 00F0 0000 FF00 0000 F070 60F0"            /* .............p`. */
	$"0000 0000 0F00 0000 00F0 0000 F707 07F0"            /* ................ */
	$"0000 0000 0F00 0000 00F0 0000 0F70 7F00"            /* .............p.. */
	$"0000 000F FFFF 0000 000F 0000 00FF F000"            /* ................ */
	$"0000 000F DEDF 0000 000F 0000 0000 0000"            /* ................ */
	$"0000 00FD EDED F000 0000 F001 0000 0001"            /* ................ */
	$"0000 FFDE DEDE DFF0 0000 F01F 1001 001F"            /* ................ */
	$"000F EDED EDED EDEF 0000 F001 101F 11F1"            /* ................ */
	$"00FE DEDE DEDE DEDE F000 0F01 F101 1010"            /* ................ */
	$"00FD EDED EDED EDED F000 0F00 1F11 F100"            /* ................ */
	$"0FDE DEDE DEDE D0DE DF00 00F0 0101 1101"            /* ................ */
	$"0FED EDED EDED EDED EF00 000F FF1F 1F1F"            /* ................ */
	$"0FDE DEDE DEDE DE0E DF00 0000 1001 1101"            /* ................ */
	$"0FED EDED EDED ED0D EF00 0001 F111 F100"            /* ................ */
	$"0FDE DEDE DEDE DE0E DF00 0001 11F1 1F10"            /* ................ */
	$"0FED EDED EDED E0ED EF00 001F 1010 0101"            /* ................ */
	$"0FDE DEDE DEDE DEDE DF00 01F1 01F1 001F"            /* ................ */
	$"00FD EDED EDE0 EDED F000 0010 0010 0001"            /* ................ */
	$"00FE DEDE DEDE DEDE F000 0000 01F1 0000"            /* ................ */
	$"000F EDED EDED EDEF 0000 0000 0010 0000"            /* ................ */
	$"0000 FFDE DEDE DFF0 0000 0000 0000 0000"            /* ................ */
	$"0000 00FF FFFF F000 0000 0000 0000 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 0000 0000"            /* ................ */
};

data 'ics8' (128, purgeable) {
	$"0000 0000 0000 0000 0000 0000 00FF 0000"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 FFC0 FF00"            /* ................ */
	$"0000 0000 0000 0000 0000 0000 FF00 FF00"            /* ................ */
	$"0000 0000 00FF FFFF 0000 00FF 00C0 00FF"            /* ................ */
	$"0000 0000 FF00 0000 FF00 00FF C000 C0FF"            /* ................ */
	$"0000 FFFF FFFF FF00 00FF 00FF 00C0 00FF"            /* ................ */
	$"0000 FFFB FBFB FF00 00FF 0000 FFFF FF00"            /* ................ */
	$"00FF FBFB FBFB FBFF 0000 FF00 0000 0000"            /* ................ */
	$"FFFB FBFB FBFB FBFB FF00 FF00 0000 0000"            /* ................ */
	$"FFFB FBFB FBFB 00FB FF00 00FF 0505 FF05"            /* ................ */
	$"FFFB FBFB FBFB 00FB FF00 0505 FF00 0500"            /* ................ */
	$"FFFB FBFB FB00 FBFB FF05 FF05 0500 FF05"            /* ................ */
	$"FFFB FBFB FBFB FBFB FF00 0500 FF05 05FF"            /* ................ */
	$"00FF FBFB FBFB FBFF 0000 0005 05FF 0005"            /* ................ */
	$"0000 FFFF FFFF FF00 0000 05FF 0505 0500"            /* ................ */
	$"0000 0000 0000 0000 0000 0005 0005 FF05"            /* ................ */
};

data 'ics4' (128, purgeable) {
	$"0000 0000 0000 0F00 0000 0000 0000 F7F0"            /* ................ */
	$"0000 0000 0000 F0F0 0000 0FFF 000F 070F"            /* ................ */
	$"0000 F000 F00F 707F 00FF FFF0 0F0F 070F"            /* ......p......... */
	$"00FD EDF0 0F00 FFF0 0FDE DEDF 00F0 0000"            /* ................ */
	$"FDED EDED F0F0 0000 FEDE DE0E F00F 11F1"            /* ................ */
	$"FDED ED0D F011 F010 FEDE D0DE F1F1 10F1"            /* ................ */
	$"FDED EDED F010 F11F 0FDE DEDF 0001 1F01"            /* ................ */
	$"00FF FFF0 001F 1110 0000 0000 0001 01F1"            /* ................ */
};

data 'mxbh' (0, "MacsBug Help") {
	$"0011 0000 0012 0363 000B 061B 0009 0807"            /* .......c........ */
	$"0012 0C31 0005 0CF2 001A 116C 000C 134E"            /* ...1.......l...N */
	$"0021 191E 000D 1AA9 001C 1ED6 000A 2060"            /* .!............ ` */
	$"000C 22AE 001C 2686 000D 2808 0008 2904"            /* .."...&...(...). */
	$"0039 3164 0001 0047 0CFF 0003 0D72 0004"            /* .91d...G.....r.. */
	$"0E0C 0003 0E84 0006 0FA8 0003 102D 0006"            /* .............-.. */
	$"1178 0004 1258 0003 12E7 0002 132D 0002"            /* .x...X.......-.. */
	$"1446 0003 14F7 0002 1559 0002 15B2 0004"            /* .F.......Y...... */
	$"168F 0002 16D4 0002 16F6 0003 1781 0002"            /* ................ */
	$"17BD 0005 18DD 0002 195F 0002 19AF 0002"            /* ........._...... */
	$"19E8 0002 1A1A 0002 1A5B 0002 1AAF 0003"            /* .........[...... */
	$"1B35 0003 1BA6 000B 1D2F 0002 1D5C 0002"            /* .5......./...\.. */
	$"1D8E 0006 1EDE 0005 1FCF 0002 2010 0002"            /* ............ ... */
	$"2066 0005 2161 0006 22F3 0005 2400 0003"            /*  f..!a.."...$... */
	$"2460 0002 2495 0002 24BC 0002 24E3 0002"            /* $`..$...$...$... */
	$"250A 0003 25AE 0002 25F6 0002 263E 0002"            /* %...%...%...&>.. */
	$"270C 0002 2729 0002 2757 0002 277A 0003"            /* '...')..'W..'z.. */
	$"280F 0003 287E 0002 28B8 0002 295C 0002"            /* (...(~..(...)\.. */
	$"2986 0002 29C2 0002 29E6 0002 2A0D 0003"            /* )...)...)...*... */
	$"2A71 0002 2AAA 0004 2B7B 0002 2BC2 0002"            /* *q..*...+{..+... */
	$"2C09 0002 2C50 0002 2C9A 0004 2D6B 0003"            /* ,...,P..,...-k.. */
	$"2DF3 0008 2F3E 0007 3081 0002 30D3 0002"            /* -.../>..0...0... */
	$"30F2 0003 0745 6469 7469 6E67 4554 7970"            /* 0....EditingETyp */
	$"6520 6120 636F 6D6D 616E 6420 616E 6420"            /* e a command and  */
	$"7468 656E 2070 7265 7373 2052 6574 7572"            /* then press Retur */
	$"6E20 6F72 2045 6E74 6572 2074 6F20 6578"            /* n or Enter to ex */
	$"6563 7574 6520 6974 2E20 5072 6573 7369"            /* ecute it. Pressi */
	$"6E67 4352 6574 7572 6E20 7769 7468 6F75"            /* ngCReturn withou */
	$"7420 656E 7465 7269 6E67 2061 2063 6F6D"            /* t entering a com */
	$"6D61 6E64 2072 6570 6561 7473 2074 6865"            /* mand repeats the */
	$"206C 6173 7420 636F 6D6D 616E 642E 2059"            /*  last command. Y */
	$"6F75 2063 616E 3D65 6E74 6572 206D 6F72"            /* ou can=enter mor */
	$"6520 7468 616E 206F 6E65 2063 6F6D 6D61"            /* e than one comma */
	$"6E64 206F 6E20 7468 6520 636F 6D6D 616E"            /* nd on the comman */
	$"6420 6C69 6E65 2062 7920 7365 7061 7261"            /* d line by separa */
	$"7469 6E67 1E63 6F6D 6D61 6E64 7320 7769"            /* ting.commands wi */
	$"7468 2061 2073 656D 6963 6F6C 6F6E 2028"            /* th a semicolon ( */
	$"3B29 2E00 0010 4564 6974 696E 6720 636F"            /* ;)....Editing co */
	$"6D6D 616E 6473 4220 2043 6F6D 6D61 6E64"            /* mmandsB  Command */
	$"2D56 2020 2020 2020 2020 2020 2020 5363"            /* -V            Sc */
	$"726F 6C6C 2063 6F6D 6D61 6E64 2062 7566"            /* roll command buf */
	$"6665 7220 646F 776E 2061 6E64 2063 6F70"            /* fer down and cop */
	$"7920 636F 6D6D 616E 643B 2020 2020 2020"            /* y command;       */
	$"2020 2020 2020 2020 2020 2020 2020 2020"            /*                  */
	$"2020 2020 2020 2020 6C69 6E65 2074 6F20"            /*         line to  */
	$"6375 7272 656E 7420 636F 6D6D 616E 6420"            /* current command  */
	$"6C69 6E65 2E40 2020 436F 6D6D 616E 642D"            /* line.@  Command- */
	$"4220 2020 2020 2020 2020 2020 2053 6372"            /* B            Scr */
	$"6F6C 6C20 636F 6D6D 616E 6420 6275 6666"            /* oll command buff */
	$"6572 2075 7020 616E 6420 636F 7079 2063"            /* er up and copy c */
	$"6F6D 6D61 6E64 3B20 2020 2020 2020 2020"            /* ommand;          */
	$"2020 2020 2020 2020 2020 2020 2020 2020"            /*                  */
	$"2020 2020 206C 696E 6520 746F 2063 7572"            /*      line to cur */
	$"7265 6E74 2063 6F6D 6D61 6E64 206C 696E"            /* rent command lin */
	$"652E 3120 204F 7074 696F 6E2D 4C65 6674"            /* e.1  Option-Left */
	$"2041 7272 6F77 2020 2020 4D6F 7665 2063"            /*  Arrow    Move c */
	$"7572 736F 7220 6C65 6674 206F 6E65 2077"            /* ursor left one w */
	$"6F72 642E 3220 204F 7074 696F 6E2D 5269"            /* ord.2  Option-Ri */
	$"6768 7420 4172 726F 7720 2020 4D6F 7665"            /* ght Arrow   Move */
	$"2063 7572 736F 7220 7269 6768 7420 6F6E"            /*  cursor right on */
	$"6520 776F 7264 2E41 2020 4F70 7469 6F6E"            /* e word.A  Option */
	$"2D44 656C 6574 6520 2020 2020 2020 2044"            /* -Delete        D */
	$"656C 6574 6520 7468 6520 776F 7264 2074"            /* elete the word t */
	$"6F20 7468 6520 6C65 6674 206F 6620 7468"            /* o the left of th */
	$"6520 6375 7273 6F72 2E40 2020 436F 6D6D"            /* e cursor.@  Comm */
	$"616E 642D 4C65 6674 2041 7272 6F77 2020"            /* and-Left Arrow   */
	$"204D 6F76 6520 6375 7273 6F72 2074 6F20"            /*  Move cursor to  */
	$"6265 6769 6E6E 696E 6720 6F66 2063 6F6D"            /* beginning of com */
	$"6D61 6E64 206C 696E 652E 3A20 2043 6F6D"            /* mand line.:  Com */
	$"6D61 6E64 2D52 6967 6874 2041 7272 6F77"            /* mand-Right Arrow */
	$"2020 4D6F 7665 2063 7572 736F 7220 746F"            /*   Move cursor to */
	$"2065 6E64 206F 6620 636F 6D6D 616E 6420"            /*  end of command  */
	$"6C69 6E65 2E41 2020 436F 6D6D 616E 642D"            /* line.A  Command- */
	$"4465 6C65 7465 2020 2020 2020 2044 656C"            /* Delete       Del */
	$"6574 6520 7468 6520 6C69 6E65 2074 6F20"            /* ete the line to  */
	$"7468 6520 6C65 6674 206F 6620 7468 6520"            /* the left of the  */
	$"6375 7273 6F72 2E19 5365 6C65 6374 696E"            /* cursor..Selectin */
	$"6720 7072 6F63 6564 7572 6520 6E61 6D65"            /* g procedure name */
	$"7343 4469 7370 6C61 7920 6120 6C69 7374"            /* sCDisplay a list */
	$"206F 6620 7072 6F63 6564 7572 6520 6E61"            /*  of procedure na */
	$"6D65 7320 6279 2074 7970 696E 6720 436F"            /* mes by typing Co */
	$"6D6D 616E 642D 3A20 6F72 2043 6F6D 6D61"            /* mmand-: or Comma */
	$"6E64 2D44 2E41 5365 6C65 6374 2061 2070"            /* nd-D.ASelect a p */
	$"726F 6365 6475 7265 2066 726F 6D20 7468"            /* rocedure from th */
	$"6520 6C69 7374 2062 7920 7573 696E 6720"            /* e list by using  */
	$"7468 6520 7570 2061 6E64 2064 6F77 6E20"            /* the up and down  */
	$"6172 726F 7773 2E3E 436F 7079 2074 6865"            /* arrows.>Copy the */
	$"2073 656C 6563 7465 6420 7072 6F63 6564"            /*  selected proced */
	$"7572 6520 6E61 6D65 2074 6F20 7468 6520"            /* ure name to the  */
	$"696E 7365 7274 696F 6E20 706F 696E 7420"            /* insertion point  */
	$"6F66 2074 6865 4363 6F6D 6D61 6E64 206C"            /* of theCcommand l */
	$"696E 6520 6279 2070 7265 7373 696E 6720"            /* ine by pressing  */
	$"5265 7475 726E 2E20 5072 6573 7320 4573"            /* Return. Press Es */
	$"6361 7065 2074 6F20 6C65 6176 6520 636F"            /* cape to leave co */
	$"6D6D 616E 6420 6C69 6E65 4475 6E63 6861"            /* mmand lineDuncha */
	$"6E67 6564 2E20 4469 7370 6C61 7920 6120"            /* nged. Display a  */
	$"7365 6C65 6374 6564 2028 7175 616C 6966"            /* selected (qualif */
	$"6965 6429 206C 6973 7420 6F66 2070 726F"            /* ied) list of pro */
	$"6365 6475 7265 206E 616D 6573 2062 7942"            /* cedure names byB */
	$"7479 7069 6E67 2074 6865 2066 6972 7374"            /* typing the first */
	$"206C 6574 7465 7228 7329 206F 6620 7468"            /*  letter(s) of th */
	$"6520 7072 6F63 6564 7572 6520 6E61 6D65"            /* e procedure name */
	$"2028 6166 7465 7220 6469 7370 6C61 7969"            /*  (after displayi */
	$"6E67 4174 6865 206C 6973 7420 7769 7468"            /* ngAthe list with */
	$"2043 6F6D 6D61 6E64 2D3A 206F 7220 436F"            /*  Command-: or Co */
	$"6D6D 616E 642D 4429 2E20 5072 6573 7369"            /* mmand-D). Pressi */
	$"6E67 2044 656C 6574 6520 756E 646F 6573"            /* ng Delete undoes */
	$"2074 6865 4371 7561 6C69 6669 6361 7469"            /*  theCqualificati */
	$"6F6E 206F 6E65 206C 6574 7465 7220 6174"            /* on one letter at */
	$"2061 2074 696D 652E 2045 6E74 6572 696E"            /*  a time. Enterin */
	$"6720 436F 6D6D 616E 642D 3A20 6F72 2043"            /* g Command-: or C */
	$"6F6D 6D61 6E64 2D44 4475 6E64 6F65 7320"            /* ommand-DDundoes  */
	$"7468 6520 7175 616C 6966 6963 6174 696F"            /* the qualificatio */
	$"6E20 616E 6420 7368 6F77 7320 616C 6C20"            /* n and shows all  */
	$"7072 6F63 6564 7572 6520 6E61 6D65 732E"            /* procedure names. */
	$"2057 6974 6820 432B 2B20 616E 6441 4F62"            /*  With C++ andAOb */
	$"6A65 6374 2050 6173 6361 6C20 6E61 6D65"            /* ject Pascal name */
	$"7320 796F 7520 6D61 7920 7573 6520 7468"            /* s you may use th */
	$"6520 5461 6220 6B65 7920 746F 2071 7561"            /* e Tab key to qua */
	$"6C69 6679 2074 6865 2063 6C61 7373 2E0B"            /* lify the class.. */
	$"4578 7072 6573 7369 6F6E 733F 5468 6520"            /* Expressions?The  */
	$"6765 6E65 7261 6C20 666F 726D 206F 6620"            /* general form of  */
	$"616E 2065 7870 7265 7373 696F 6E20 6973"            /* an expression is */
	$"3A20 7661 6C75 6531 205B 6F70 6572 6174"            /* : value1 [operat */
	$"6F72 2076 616C 7565 325D 2E33 5573 6520"            /* or value2].3Use  */
	$"7061 7265 6E74 6865 7365 7320 746F 2063"            /* parentheses to c */
	$"6F6E 7472 6F6C 2074 6865 206F 7264 6572"            /* ontrol the order */
	$"206F 6620 6576 616C 7561 7469 6F6E 2E3D"            /*  of evaluation.= */
	$"4578 7072 6573 7369 6F6E 7320 616C 7761"            /* Expressions alwa */
	$"7973 2065 7661 6C75 6174 6520 746F 2061"            /* ys evaluate to a */
	$"2033 3220 6269 7420 7661 6C75 6520 756E"            /*  32 bit value un */
	$"6C65 7373 202E 5720 6F72 202E 4240 666F"            /* less .W or .B@fo */
	$"6C6C 6F77 7320 7468 6520 7661 6C75 652E"            /* llows the value. */
	$"2045 7870 7265 7373 696F 6E73 2065 7661"            /*  Expressions eva */
	$"6C75 6174 6520 746F 2065 6974 6865 7220"            /* luate to either  */
	$"6120 6E75 6D65 7269 6320 6F72 2061 3D62"            /* a numeric or a=b */
	$"6F6F 6C65 616E 2076 616C 7565 2062 6173"            /* oolean value bas */
	$"6564 206F 6E20 7468 6520 6F70 6572 6174"            /* ed on the operat */
	$"6F72 7320 7573 6564 2E20 5468 6520 6163"            /* ors used. The ac */
	$"7469 6F6E 206F 6620 736F 6D65 4063 6F6D"            /* tion of some@com */
	$"6D61 6E64 7320 6368 616E 6765 2062 6173"            /* mands change bas */
	$"6564 206F 6E20 7468 6973 2072 6573 756C"            /* ed on this resul */
	$"742E 2046 6F72 2069 6E73 7461 6E63 652C"            /* t. For instance, */
	$"2042 5220 6164 6472 2065 7870 7241 7769"            /*  BR addr exprAwi */
	$"6C6C 2062 7265 616B 2065 6163 6820 6E20"            /* ll break each n  */
	$"7469 6D65 7320 6966 2065 7870 7265 7373"            /* times if express */
	$"696F 6E20 6973 206E 756D 6572 6963 206F"            /* ion is numeric o */
	$"7220 6974 2077 696C 6C20 6272 6561 6B2B"            /* r it will break+ */
	$"7768 656E 2065 7870 7220 6973 2074 7275"            /* when expr is tru */
	$"6520 6966 2065 7870 7265 7373 696F 6E20"            /* e if expression  */
	$"6973 2062 6F6F 6C65 616E 2E06 5661 6C75"            /* is boolean..Valu */
	$"6573 4220 2052 6567 6973 7465 7273 2020"            /* esB  Registers   */
	$"2041 6C6C 2036 3830 3030 2066 616D 696C"            /*  All 68000 famil */
	$"7920 7265 6769 7374 6572 7320 7573 6520"            /* y registers use  */
	$"7468 6569 7220 4D6F 746F 726F 6C61 206E"            /* their Motorola n */
	$"616D 6573 2E41 2020 2020 2020 2020 2020"            /* ames.A           */
	$"2020 2020 2020 4D4D 5520 3634 2062 6974"            /*       MMU 64 bit */
	$"2072 6567 6973 7465 7273 2061 6E64 2066"            /*  registers and f */
	$"6C6F 6174 696E 6720 706F 696E 7420 7265"            /* loating point re */
	$"6769 7374 6572 732F 2020 2020 2020 2020"            /* gisters/         */
	$"2020 2020 2020 2020 6172 6520 6E6F 7420"            /*         are not  */
	$"616C 6C6F 7765 6420 696E 2065 7870 7265"            /* allowed in expre */
	$"7373 696F 6E73 2E45 2020 4E75 6D62 6572"            /* ssions.E  Number */
	$"7320 2020 2020 4E75 6D62 6572 7320 6172"            /* s     Numbers ar */
	$"6520 6865 7820 6279 2064 6566 6175 6C74"            /* e hex by default */
	$"2062 7574 2063 616E 2062 6520 7072 6563"            /*  but can be prec */
	$"6564 6564 2062 7920 6120 2724 2742 2020"            /* eded by a '$'B   */
	$"2020 2020 2020 2020 2020 2020 2020 696E"            /*               in */
	$"2074 6865 2063 6173 6520 6F66 2063 6F6E"            /*  the case of con */
	$"666C 6963 7473 2077 6974 6820 7265 6769"            /* flicts with regi */
	$"7374 6572 7320 416E 2061 6E64 2044 6E2E"            /* sters An and Dn. */
	$"4220 2020 2020 2020 2020 2020 2020 2020"            /* B                */
	$"204E 756D 6265 7273 2061 7265 2064 6563"            /*  Numbers are dec */
	$"696D 616C 2069 6620 7468 6579 2061 7265"            /* imal if they are */
	$"2070 7265 6365 6465 6420 6279 2061 2027"            /*  preceded by a ' */
	$"2327 2E43 2020 5379 6D62 6F6C 7320 2020"            /* #'.C  Symbols    */
	$"2020 5379 6D62 6F6C 7320 6172 6520 666F"            /*   Symbols are fo */
	$"756E 6420 6279 2073 6561 7263 6869 6E67"            /* und by searching */
	$"2074 6865 2068 6561 7020 616E 6420 6576"            /*  the heap and ev */
	$"616C 7561 7465 201E 2020 2020 2020 2020"            /* aluate .         */
	$"2020 2020 2020 2020 746F 2061 6E20 6164"            /*         to an ad */
	$"6472 6573 732E 4320 2054 7261 7073 2020"            /* dress.C  Traps   */
	$"2020 2020 2054 7261 7020 6E75 6D62 6572"            /*      Trap number */
	$"2069 6E20 7468 6520 7261 6E67 6520 4130"            /*  in the range A0 */
	$"3030 2074 6F20 4142 4646 206F 7220 6120"            /* 00 to ABFF or a  */
	$"7472 6170 206E 616D 652E 4220 2020 2020"            /* trap name.B      */
	$"2020 2020 2020 2020 2020 2054 7261 7020"            /*            Trap  */
	$"6E61 6D65 7320 6361 6E20 6265 2070 7265"            /* names can be pre */
	$"6365 6465 6420 6279 2061 2027 A027 2069"            /* ceded by a '.' i */
	$"6E20 7468 6520 6361 7365 206F 662C 2020"            /* n the case of,   */
	$"2020 2020 2020 2020 2020 2020 2020 636F"            /*               co */
	$"6E66 6C69 6374 7320 7769 7468 2073 796D"            /* nflicts with sym */
	$"626F 6C20 6E61 6D65 732E 4220 2027 2E27"            /* bol names.B  '.' */
	$"2020 2020 2020 2020 2054 6865 206C 6173"            /*          The las */
	$"7420 6164 6472 6573 7320 7265 6665 7265"            /* t address refere */
	$"6E63 6564 2062 7920 6365 7274 6169 6E20"            /* nced by certain  */
	$"636F 6D6D 616E 6473 2E20 466F 7242 2020"            /* commands. ForB   */
	$"2020 2020 2020 2020 2020 2020 2020 696E"            /*               in */
	$"7374 616E 6365 2053 4D20 7365 7473 2064"            /* stance SM sets d */
	$"6F74 2074 6F20 7468 6520 6669 7273 7420"            /* ot to the first  */
	$"6164 6472 6573 7320 7468 6174 2077 6173"            /* address that was */
	$"3F20 2020 2020 2020 2020 2020 2020 2020"            /* ?                */
	$"2063 6861 6E67 6564 2061 6E64 2073 6574"            /*  changed and set */
	$"7320 7468 6520 6C61 7374 2063 6F6D 6D61"            /* s the last comma */
	$"6E64 2074 6F20 444D 2E20 5479 7069 6E67"            /* nd to DM. Typing */
	$"4020 2020 2020 2020 2020 2020 2020 2020"            /* @                */
	$"2072 6574 7572 6E20 7769 6C6C 2064 6973"            /*  return will dis */
	$"706C 6179 2074 6865 206D 656D 6F72 7920"            /* play the memory  */
	$"7468 6174 2077 6173 2063 6861 6E67 6564"            /* that was changed */
	$"2E42 2020 273A 2720 2020 2020 2020 2020"            /* .B  ':'          */
	$"5468 6520 6164 6472 6573 7320 6F66 2074"            /* The address of t */
	$"6865 2073 7461 7274 206F 6620 7468 6520"            /* he start of the  */
	$"7072 6F63 2073 686F 776E 2069 6E20 7468"            /* proc shown in th */
	$"6520 5043 4020 2020 2020 2020 2020 2020"            /* e PC@            */
	$"2020 2020 2077 696E 646F 772E 204E 6F74"            /*      window. Not */
	$"2076 616C 6964 2069 6620 6E6F 2070 726F"            /*  valid if no pro */
	$"6320 6E61 6D65 2065 7869 7374 7320 666F"            /* c name exists fo */
	$"7220 5043 2E09 4F70 6572 6174 6F72 7323"            /* r PC..Operators# */
	$"2020 4172 6974 686D 6574 6963 2020 2020"            /*   Arithmetic     */
	$"2B20 2020 2D20 2020 2A20 2020 2F20 2020"            /* +   -   *   /    */
	$"4D4F 4433 2020 426F 6F6C 6561 6E20 2020"            /* MOD3  Boolean    */
	$"2020 2020 414E 4420 6F72 2026 2020 204F"            /*     AND or &   O */
	$"5220 6F72 207C 2020 204E 4F54 206F 7220"            /* R or |   NOT or  */
	$"2120 2020 584F 5234 2020 4571 7561 6C69"            /* !   XOR4  Equali */
	$"7479 2020 2020 2020 3D20 6F72 203D 3D20"            /* ty      = or ==  */
	$"2020 3C3E 206F 7220 213D 2020 203C 2020"            /*   <> or !=   <   */
	$"203E 2020 203C 3D20 2020 3E3D 2920 2049"            /*  >   <=   >=)  I */
	$"6E64 6972 6563 7469 6F6E 2020 2040 2028"            /* ndirection   @ ( */
	$"7072 6566 6978 2920 6F72 205E 2028 706F"            /* prefix) or ^ (po */
	$"7374 6669 7829 0C46 6C6F 7720 636F 6E74"            /* stfix).Flow cont */
	$"726F 6C08 4720 5B61 6464 725D 4320 2020"            /* rol.G [addr]C    */
	$"5265 7375 6D65 2065 7865 6375 7469 6F6E"            /* Resume execution */
	$"2061 7420 6164 6472 206F 7220 5043 2069"            /*  at addr or PC i */
	$"6620 6E6F 2061 6464 722E 2043 6F6D 6D61"            /* f no addr. Comma */
	$"6E64 2D47 2069 7320 7468 6520 7361 6D65"            /* nd-G is the same */
	$"2520 2020 6173 2065 6E74 6572 696E 6720"            /* %   as entering  */
	$"4720 616E 6420 7072 6573 7369 6E67 2052"            /* G and pressing R */
	$"6574 7572 6E2E 1147 5420 6164 6472 205B"            /* eturn..GT addr [ */
	$"273B 636D 6473 275D 3D20 2020 476F 2074"            /* ';cmds']=   Go t */
	$"696C 6C20 6164 6472 2069 7320 7265 6163"            /* ill addr is reac */
	$"6865 6420 616E 6420 6F70 7469 6F6E 616C"            /* hed and optional */
	$"6C79 2065 7865 6375 7465 206F 6E65 206F"            /* ly execute one o */
	$"7220 6D6F 7265 3E20 2020 636F 6D6D 616E"            /* r more>   comman */
	$"6473 2E20 5468 6520 6164 6472 2063 616E"            /* ds. The addr can */
	$"2062 6520 696E 2052 4F4D 2062 7574 2065"            /*  be in ROM but e */
	$"7865 6375 7469 6F6E 2077 696C 6C20 6265"            /* xecution will be */
	$"206D 7563 680A 2020 2073 6C6F 7765 722E"            /*  much.   slower. */
	$"0D53 2020 5B6E 207C 2065 7870 725D 4320"            /* .S  [n | expr]C  */
	$"2020 5374 6570 206E 2069 6E73 7472 7563"            /*   Step n instruc */
	$"7469 6F6E 7320 6F72 2075 6E74 696C 2065"            /* tions or until e */
	$"7870 7220 6973 2074 7275 652E 2043 6F6D"            /* xpr is true. Com */
	$"6D61 6E64 2D53 2069 7320 7468 6520 7361"            /* mand-S is the sa */
	$"6D65 2520 2020 6173 2065 6E74 6572 696E"            /* me%   as enterin */
	$"6720 5320 616E 6420 7072 6573 7369 6E67"            /* g S and pressing */
	$"2052 6574 7572 6E2E 0D53 4F20 5B6E 207C"            /*  Return..SO [n | */
	$"2065 7870 725D 4220 2020 5374 6570 206E"            /*  expr]B   Step n */
	$"2069 6E73 7472 7563 7469 6F6E 7320 6F72"            /*  instructions or */
	$"2075 6E74 696C 2065 7870 7220 6973 2074"            /*  until expr is t */
	$"7275 652E 204A 5352 732C 2042 5352 7320"            /* rue. JSRs, BSRs  */
	$"616E 6420 5472 6170 7341 2020 2061 7265"            /* and TrapsA   are */
	$"2074 7265 6174 6564 2061 7320 6F6E 6520"            /*  treated as one  */
	$"696E 7374 7275 6374 696F 6E2E 2046 6F72"            /* instruction. For */
	$"2068 6973 746F 7269 6361 6C20 7265 6173"            /*  historical reas */
	$"6F6E 732C 2054 2028 666F 7241 2020 2054"            /* ons, T (forA   T */
	$"7261 6365 2920 6973 2061 6C6C 6F77 6564"            /* race) is allowed */
	$"2061 7320 616E 2061 6C69 6173 2066 6F72"            /*  as an alias for */
	$"2053 4F2E 2043 6F6D 6D61 6E64 2D54 2069"            /*  SO. Command-T i */
	$"7320 7468 6520 7361 6D65 2061 7343 2020"            /* s the same asC   */
	$"2065 6E74 6572 696E 6720 5420 616E 6420"            /*  entering T and  */
	$"7072 6573 7369 6E67 2052 6574 7572 6E2E"            /* pressing Return. */
	$"2049 6620 6E20 6973 207A 6572 6F20 7468"            /*  If n is zero th */
	$"656E 2063 6C65 6172 2061 6C6C 2073 7465"            /* en clear all ste */
	$"700A 2020 2070 6F69 6E74 732E 0E53 5320"            /* p.   points..SS  */
	$"6164 6472 205B 6164 6472 5D43 2020 2053"            /* addr [addr]C   S */
	$"7465 7020 756E 7469 6C20 6368 6563 6B73"            /* tep until checks */
	$"756D 206F 6620 6164 6472 2072 616E 6765"            /* um of addr range */
	$"2063 6861 6E67 6573 2E20 4966 2079 6F75"            /*  changes. If you */
	$"2064 6F20 6E6F 7420 7370 6563 6966 7931"            /*  do not specify1 */
	$"2020 2061 2072 616E 6765 2C20 7374 6570"            /*    a range, step */
	$"2075 6E74 696C 206C 6F6E 6720 776F 7264"            /*  until long word */
	$"2061 7420 6164 6472 2063 6861 6E67 6573"            /*  at addr changes */
	$"2E12 4D52 205B 6F66 6673 6574 207C 2061"            /* ..MR [offset | a */
	$"6464 725D 4420 2020 4272 6561 6B20 6166"            /* ddr]D   Break af */
	$"7465 7220 7468 6520 6375 7272 656E 7420"            /* ter the current  */
	$"7072 6F63 6564 7572 6520 7265 7475 726E"            /* procedure return */
	$"7320 6279 2072 6570 6C61 6369 6E67 2069"            /* s by replacing i */
	$"7473 2072 6574 7572 6E44 2020 2061 6464"            /* ts returnD   add */
	$"7265 7373 2E20 4966 2074 6865 2070 6172"            /* ress. If the par */
	$"616D 6574 6572 2069 7320 6C65 7373 2074"            /* ameter is less t */
	$"6861 6E20 4136 2074 6865 6E20 7468 6520"            /* han A6 then the  */
	$"7265 7475 726E 2061 6464 7265 7373 4320"            /* return addressC  */
	$"2020 6973 2061 7420 4137 2B6F 6666 7365"            /*   is at A7+offse */
	$"742E 2049 6620 7468 6520 7061 7261 6D65"            /* t. If the parame */
	$"7465 7220 6973 2067 7265 6174 6572 2074"            /* ter is greater t */
	$"6861 6E20 6F72 2065 7175 616C 2074 6F20"            /* han or equal to  */
	$"4136 4120 2020 7468 656E 2074 6865 2072"            /* A6A   then the r */
	$"6574 7572 6E20 6164 6472 6573 7320 6973"            /* eturn address is */
	$"2061 7420 6164 6472 2B34 2E20 4966 206E"            /*  at addr+4. If n */
	$"6F20 7061 7261 6D65 7465 7220 7468 656E"            /* o parameter then */
	$"2074 6865 1B20 2020 7265 7475 726E 2061"            /*  the.   return a */
	$"6464 7265 7373 2069 7320 6174 2041 372E"            /* ddress is at A7. */
	$"0B42 7265 616B 706F 696E 7473 1C42 5220"            /* .Breakpoints.BR  */
	$"6164 6472 205B 6E20 7C20 6578 7072 5D20"            /* addr [n | expr]  */
	$"5B27 3B63 6D64 7327 5D41 2020 2042 7265"            /* [';cmds']A   Bre */
	$"616B 2061 7420 6164 6472 2065 6163 6820"            /* ak at addr each  */
	$"6E20 7469 6D65 7320 6F72 2077 6865 6E20"            /* n times or when  */
	$"6578 7072 2069 7320 7472 7565 2061 6E64"            /* expr is true and */
	$"206F 7074 696F 6E61 6C6C 7943 2020 2065"            /*  optionallyC   e */
	$"7865 6375 7465 206F 6E65 206F 7220 6D6F"            /* xecute one or mo */
	$"7265 2063 6F6D 6D61 6E64 732E 2049 6620"            /* re commands. If  */
	$"6E6F 206E 206F 7220 6578 7072 2074 6865"            /* no n or expr the */
	$"6E20 6272 6561 6B20 616C 7761 7973 2E3C"            /* n break always.< */
	$"2020 2054 6865 2061 6464 7220 6361 6E20"            /*    The addr can  */
	$"6265 2069 6E20 524F 4D20 6275 7420 6578"            /* be in ROM but ex */
	$"6563 7574 696F 6E20 7769 6C6C 2062 6520"            /* ecution will be  */
	$"6D75 6368 2073 6C6F 7765 722E 0A42 524D"            /* much slower..BRM */
	$"2073 7472 696E 673E 2020 2053 6574 2062"            /*  string>   Set b */
	$"7265 616B 706F 696E 7473 2061 7420 616C"            /* reakpoints at al */
	$"6C20 7072 6F63 6564 7572 6520 6E61 6D65"            /* l procedure name */
	$"7320 7468 6174 2063 6F6E 7461 696E 2073"            /* s that contain s */
	$"7472 696E 672E 4420 2020 5374 7269 6E67"            /* tring.D   String */
	$"2063 616E 206F 6363 7572 2061 6E79 7768"            /*  can occur anywh */
	$"6572 6520 696E 2074 6865 206E 616D 652C"            /* ere in the name, */
	$"206E 6F74 206A 7573 7420 6174 2074 6865"            /*  not just at the */
	$"2062 6567 696E 6E69 6E67 2E0A 4252 4320"            /*  beginning..BRC  */
	$"5B61 6464 725D 3A20 2020 436C 6561 7220"            /* [addr]:   Clear  */
	$"6272 6561 6B70 6F69 6E74 2061 7420 6164"            /* breakpoint at ad */
	$"6472 206F 7220 616C 6C20 6272 6561 6B70"            /* dr or all breakp */
	$"6F69 6E74 7320 6966 206E 6F20 6164 6472"            /* oints if no addr */
	$"2E03 4252 441C 2020 2044 6973 706C 6179"            /* ..BRD.   Display */
	$"2062 7265 616B 706F 696E 7420 7461 626C"            /*  breakpoint tabl */
	$"652E 0741 2D54 7261 7073 4041 7070 656E"            /* e..A-Traps@Appen */
	$"6469 6E67 2041 2074 6F20 616E 2041 2D54"            /* ding A to an A-T */
	$"7261 7020 636F 6D6D 616E 6420 6E61 6D65"            /* rap command name */
	$"2073 7065 6369 6669 6573 2074 6861 7420"            /*  specifies that  */
	$"7468 6520 636F 6D6D 616E 6442 6170 706C"            /* the commandBappl */
	$"6965 7320 6F6E 6C79 2074 6F20 412D 5472"            /* ies only to A-Tr */
	$"6170 7320 7468 6174 2061 7265 2063 616C"            /* aps that are cal */
	$"6C65 6420 6672 6F6D 2074 6865 2061 7070"            /* led from the app */
	$"6C69 6361 7469 6F6E 2068 6561 702E 4245"            /* lication heap.BE */
	$"6E74 6572 696E 6720 7477 6F20 7472 6170"            /* ntering two trap */
	$"7320 6173 2070 6172 616D 6574 6572 7320"            /* s as parameters  */
	$"6465 6669 6E65 7320 6120 7472 6170 2072"            /* defines a trap r */
	$"616E 6765 2E20 456E 7465 7269 6E67 206E"            /* ange. Entering n */
	$"6F27 2020 7472 6170 7320 6465 6669 6E65"            /* o'  traps define */
	$"7320 7468 6520 7261 6E67 6520 4130 3030"            /* s the range A000 */
	$"2074 6F20 4142 4646 2E00 2941 5442 5B41"            /*  to ABFF..)ATB[A */
	$"5D20 5B74 7261 7020 5B74 7261 705D 5D20"            /* ] [trap [trap]]  */
	$"5B6E 207C 2065 7870 725D 205B 273B 636D"            /* [n | expr] [';cm */
	$"6473 275D 4220 2020 4272 6561 6B20 6174"            /* ds']B   Break at */
	$"2074 7261 7073 2065 6163 6820 6E20 7469"            /*  traps each n ti */
	$"6D65 7320 6F72 2077 6865 6E20 6578 7072"            /* mes or when expr */
	$"2069 7320 7472 7565 2061 6E64 206F 7074"            /*  is true and opt */
	$"696F 6E61 6C6C 7943 2020 2065 7865 6375"            /* ionallyC   execu */
	$"7465 206F 6E65 206F 7220 6D6F 7265 2063"            /* te one or more c */
	$"6F6D 6D61 6E64 732E 2049 6620 6E6F 206E"            /* ommands. If no n */
	$"206F 7220 6578 7072 2074 6865 6E20 6272"            /*  or expr then br */
	$"6561 6B20 616C 7761 7973 2E1F 4154 545B"            /* eak always..ATT[ */
	$"415D 205B 7472 6170 205B 7472 6170 5D5D"            /* A] [trap [trap]] */
	$"205B 6E20 7C20 6578 7072 5D41 2020 2044"            /*  [n | expr]A   D */
	$"6973 706C 6179 2074 7261 7020 696E 666F"            /* isplay trap info */
	$"726D 6174 696F 6E20 6561 6368 2074 696D"            /* rmation each tim */
	$"6520 6120 7370 6563 6966 6965 6420 7472"            /* e a specified tr */
	$"6170 2069 7320 6361 6C6C 6564 2E20 4154"            /* ap is called. AT */
	$"4843 5B41 5D20 5B74 7261 7020 5B74 7261"            /* HC[A] [trap [tra */
	$"705D 5D20 5B6E 207C 2065 7870 725D 3720"            /* p]] [n | expr]7  */
	$"2020 4368 6563 6B20 7468 6520 6865 6170"            /*   Check the heap */
	$"2065 6163 6820 7469 6D65 2061 2073 7065"            /*  each time a spe */
	$"6369 6669 6564 2074 7261 7020 6973 2063"            /* cified trap is c */
	$"616C 6C65 642E 2D41 5453 535B 415D 205B"            /* alled.-ATSS[A] [ */
	$"7472 6170 205B 7472 6170 5D5D 205B 6E20"            /* trap [trap]] [n  */
	$"7C20 6578 7072 5D2C 2061 6464 7220 5B61"            /* | expr], addr [a */
	$"6464 725D 4320 2020 4368 6563 6B73 756D"            /* ddr]C   Checksum */
	$"2061 6464 7220 7261 6E67 6520 6561 6368"            /*  addr range each */
	$"2074 696D 6520 6120 7370 6563 6966 6965"            /*  time a specifie */
	$"6420 7472 6170 2069 7320 6361 6C6C 6564"            /* d trap is called */
	$"2E20 4966 2074 6865 4220 2020 6368 6563"            /* . If theB   chec */
	$"6B73 756D 2068 6173 2063 6861 6E67 6564"            /* ksum has changed */
	$"2074 6865 6E20 6272 6561 6B20 696E 746F"            /*  then break into */
	$"204D 6163 7342 7567 2E20 4966 206E 6F20"            /*  MacsBug. If no  */
	$"7365 636F 6E64 2061 6464 7227 2020 2074"            /* second addr'   t */
	$"6865 6E20 6368 6563 6B73 756D 2074 6865"            /* hen checksum the */
	$"206C 6F6E 6720 776F 7264 2061 7420 6164"            /*  long word at ad */
	$"6472 2E11 4154 4320 5B74 7261 7020 5B74"            /* dr..ATC [trap [t */
	$"7261 705D 5D32 2020 2043 6C65 6172 2074"            /* rap]]2   Clear t */
	$"7261 7020 7261 6E67 6520 6F72 2061 6C6C"            /* rap range or all */
	$"2074 7261 7073 2069 6620 6E6F 2070 6172"            /*  traps if no par */
	$"616D 6574 6572 732E 0341 5444 1D20 2020"            /* ameters..ATD.    */
	$"4469 7370 6C61 7920 7468 6520 412D 5472"            /* Display the A-Tr */
	$"6170 2074 6162 6C65 732E 1141 5452 5B41"            /* ap tables..ATR[A */
	$"5D20 5B4F 4E20 7C20 4F46 465D 3B20 2020"            /* ] [ON | OFF];    */
	$"5475 726E 7320 7472 6170 2072 6563 6F72"            /* Turns trap recor */
	$"6469 6E67 206F 6E20 6F72 206F 6666 2E20"            /* ding on or off.  */
	$"546F 6767 6C65 2069 6620 6E6F 2070 6172"            /* Toggle if no par */
	$"616D 6574 6572 732E 3C20 2020 496E 666F"            /* ameters.<   Info */
	$"726D 6174 696F 6E20 6162 6F75 7420 7468"            /* rmation about th */
	$"6520 6D6F 7374 2072 6563 656E 7420 7472"            /* e most recent tr */
	$"6170 2063 616C 6C73 2069 7320 7265 636F"            /* ap calls is reco */
	$"7264 6564 2E03 4154 5037 2020 2050 6C61"            /* rded..ATP7   Pla */
	$"7973 2062 6163 6B20 7468 6520 696E 666F"            /* ys back the info */
	$"726D 6174 696F 6E20 7265 636F 7264 6564"            /* rmation recorded */
	$"2077 6869 6C65 2041 5452 2069 7320 6F6E"            /*  while ATR is on */
	$"2E17 4453 435B 415D 205B 4F4E 207C 204F"            /* ..DSC[A] [ON | O */
	$"4646 207C 2073 7472 5D45 2020 2054 7572"            /* FF | str]E   Tur */
	$"6E73 2044 6973 6369 706C 696E 6520 6F6E"            /* ns Discipline on */
	$"206F 7220 6F66 662E 2054 6F67 676C 6520"            /*  or off. Toggle  */
	$"6966 206E 6F20 7061 7261 6D65 7465 722E"            /* if no parameter. */
	$"2041 6E79 2070 6172 616D 6574 6572 7344"            /*  Any parametersD */
	$"2020 206F 7468 6572 2074 6861 6E20 4F4E"            /*    other than ON */
	$"206F 7220 4F46 4620 6172 6520 7061 7373"            /*  or OFF are pass */
	$"6564 2074 6F20 4469 7363 6970 6C69 6E65"            /* ed to Discipline */
	$"2066 6F72 2069 6E74 6572 7072 6574 6174"            /*  for interpretat */
	$"696F 6E2E 4020 2020 4469 7363 6970 6C69"            /* ion.@   Discipli */
	$"6E65 2065 7861 6D69 6E65 7320 7061 7261"            /* ne examines para */
	$"6D65 7465 7273 2062 6566 6F72 6520 7472"            /* meters before tr */
	$"6170 2063 616C 6C73 2061 6E64 2065 7861"            /* ap calls and exa */
	$"6D69 6E65 733B 2020 2072 6573 756C 7473"            /* mines;   results */
	$"2061 6674 6572 2074 7261 7020 6361 6C6C"            /*  after trap call */
	$"732E 2041 6E79 2065 7272 6F72 7320 6272"            /* s. Any errors br */
	$"6561 6B20 696E 746F 204D 6163 7342 7567"            /* eak into MacsBug */
	$"2E0F 4453 4358 205B 4F46 4620 7C20 4F4E"            /* ..DSCX [OFF | ON */
	$"5D30 2020 2054 7572 6E20 6469 7363 6970"            /* ]0   Turn discip */
	$"6C69 6E65 2062 7265 616B 7320 6F6E 206F"            /* line breaks on o */
	$"7220 6F66 662E 2044 6566 6175 6C74 204F"            /* r off. Default O */
	$"4E2E 0B44 6973 6173 7365 6D62 6C79 3341"            /* N..Disassembly3A */
	$"6C6C 2063 6F6D 6D61 6E64 7320 6173 7375"            /* ll commands assu */
	$"6D65 2074 6865 2050 4320 6966 206E 6F20"            /* me the PC if no  */
	$"6164 6472 2069 7320 7370 6563 6966 6965"            /* addr is specifie */
	$"642E 000D 494C 205B 6164 6472 205B 6E5D"            /* d...IL [addr [n] */
	$"5D41 2020 2044 6973 6173 7365 6D62 6C65"            /* ]A   Disassemble */
	$"206E 206C 696E 6573 2066 726F 6D20 6164"            /*  n lines from ad */
	$"6472 2E20 4966 206E 6F20 6E20 7468 656E"            /* dr. If no n then */
	$"2064 6973 706C 6179 2068 616C 6620 7061"            /*  display half pa */
	$"6765 2E09 4950 205B 6164 6472 5D2E 2020"            /* ge..IP [addr].   */
	$"2044 6973 6173 7365 6D62 6C65 2068 616C"            /*  Disassemble hal */
	$"6620 7061 6765 2063 656E 7465 7265 6420"            /* f page centered  */
	$"6172 6F75 6E64 2061 6464 722E 0949 4420"            /* around addr..ID  */
	$"5B61 6464 725D 2720 2020 4469 7361 7373"            /* [addr]'   Disass */
	$"656D 626C 6520 3120 6C69 6E65 2073 7461"            /* emble 1 line sta */
	$"7274 696E 6720 6174 2061 6464 722E 0949"            /* rting at addr..I */
	$"5220 5B61 6464 725D 3620 2020 4469 7361"            /* R [addr]6   Disa */
	$"7373 656D 626C 6520 7469 6C6C 2074 6865"            /* ssemble till the */
	$"2065 6E64 206F 6620 7468 6520 726F 7574"            /*  end of the rout */
	$"696E 6520 6164 6472 2069 7320 696E 2E0B"            /* ine addr is in.. */
	$"4448 2065 7870 7220 2E2E 2E41 2020 2044"            /* DH expr ...A   D */
	$"6973 6173 7365 6D62 6C65 206F 6E65 206F"            /* isassemble one o */
	$"7220 6D6F 7265 2065 7870 7273 2061 7320"            /* r more exprs as  */
	$"6120 7365 7175 656E 6365 206F 6620 3136"            /* a sequence of 16 */
	$"2062 6974 206F 7063 6F64 6573 2E05 4865"            /*  bit opcodes..He */
	$"6170 7309 4858 205B 6164 6472 5D41 2020"            /* aps.HX [addr]A   */
	$"2053 6574 2074 6865 2063 7572 7265 6E74"            /*  Set the current */
	$"2068 6561 7020 746F 2074 6865 2068 6561"            /*  heap to the hea */
	$"7020 6174 2061 6464 722E 2049 6620 6E6F"            /* p at addr. If no */
	$"2070 6172 616D 6574 6572 2074 6865 6E39"            /*  parameter then9 */
	$"2020 2074 6F67 676C 6520 6265 7477 6565"            /*    toggle betwee */
	$"6E20 7468 6520 4170 706C 6963 6174 696F"            /* n the Applicatio */
	$"6E2C 2053 7973 7465 6D20 616E 6420 7573"            /* n, System and us */
	$"6572 2068 6561 7073 2E09 485A 205B 6164"            /* er heaps..HZ [ad */
	$"6472 5D43 2020 204C 6973 7420 616C 6C20"            /* dr]C   List all  */
	$"6B6E 6F77 6E20 6865 6170 207A 6F6E 6573"            /* known heap zones */
	$"2E20 4966 2070 6172 616D 6574 6572 2074"            /* . If parameter t */
	$"6865 6E20 6C69 7374 2061 6C6C 2068 6561"            /* hen list all hea */
	$"7020 7A6F 6E65 7322 2020 2065 6D62 6564"            /* p zones"   embed */
	$"6465 6420 696E 746F 2074 6865 2068 6561"            /* ded into the hea */
	$"7020 6174 2061 6464 722E 2648 4420 5B46"            /* p at addr.&HD [F */
	$"207C 204E 207C 2052 207C 204C 207C 2050"            /*  | N | R | L | P */
	$"207C 2051 207C 2052 5320 7C20 5459 5045"            /*  | Q | RS | TYPE */
	$"5D42 2020 2044 6973 706C 6179 2073 7065"            /* ]B   Display spe */
	$"6369 6669 6320 626C 6F63 6B73 2069 6E20"            /* cific blocks in  */
	$"7468 6520 6375 7272 656E 7420 6865 6170"            /* the current heap */
	$"206F 7220 616C 6C20 626C 6F63 6B73 2069"            /*  or all blocks i */
	$"6620 6E6F 2920 2020 7061 7261 6D65 7465"            /* f no)   paramete */
	$"722E 2054 6865 2070 6F73 7369 626C 6520"            /* r. The possible  */
	$"7175 616C 6966 6965 7273 2061 7265 1720"            /* qualifiers are.  */
	$"2020 2020 2046 3A20 2020 2046 7265 6520"            /*      F:    Free  */
	$"626C 6F63 6B73 2120 2020 2020 204E 3A20"            /* blocks!      N:  */
	$"2020 204E 6F6E 7265 6C6F 6361 7461 626C"            /*    Nonrelocatabl */
	$"6520 626C 6F63 6B73 1E20 2020 2020 2052"            /* e blocks.      R */
	$"3A20 2020 2052 656C 6F63 6174 6162 6C65"            /* :    Relocatable */
	$"2062 6C6F 636B 7319 2020 2020 2020 4C3A"            /*  blocks.      L: */
	$"2020 2020 4C6F 636B 6564 2062 6C6F 636B"            /*     Locked block */
	$"731C 2020 2020 2020 503A 2020 2020 5075"            /* s.      P:    Pu */
	$"7267 6561 626C 6520 626C 6F63 6B73 1F20"            /* rgeable blocks.  */
	$"2020 2020 2051 3A20 2020 2051 7565 7374"            /*      Q:    Quest */
	$"696F 6E61 626C 6520 626C 6F63 6B73 1B20"            /* ionable blocks.  */
	$"2020 2020 2052 533A 2020 2052 6573 6F75"            /*      RS:   Resou */
	$"7263 6520 626C 6F63 6B73 2820 2020 2020"            /* rce blocks(      */
	$"2054 5950 453A 2052 6573 6F75 7263 6520"            /*  TYPE: Resource  */
	$"626C 6F63 6B73 206F 6620 7468 6973 2074"            /* blocks of this t */
	$"7970 6502 4854 2920 2020 4469 7370 6C61"            /* ype.HT)   Displa */
	$"7920 6120 7375 6D6D 6172 7920 6F66 2074"            /* y a summary of t */
	$"6865 2063 7572 7265 6E74 2068 6561 702E"            /* he current heap. */
	$"0248 432E 2020 2043 6865 636B 2074 6865"            /* .HC.   Check the */
	$"2063 7572 7265 6E74 2068 6561 7020 666F"            /*  current heap fo */
	$"7220 696E 636F 6E73 6973 7465 6E63 6965"            /* r inconsistencie */
	$"732E 0948 5320 5B61 6464 725D 4120 2020"            /* s..HS [addr]A    */
	$"5475 726E 206F 6E20 7363 7261 6D62 6C69"            /* Turn on scrambli */
	$"6E67 206F 6620 7468 6520 6865 6170 2061"            /* ng of the heap a */
	$"7420 6164 6472 206F 7220 4170 706C 5A6F"            /* t addr or ApplZo */
	$"6E65 2069 6620 6E6F 2061 6464 722E 3A20"            /* ne if no addr.:  */
	$"2020 4361 6C6C 696E 6720 4E65 7750 7472"            /*   Calling NewPtr */
	$"2C20 4E65 7748 616E 646C 652C 2052 6561"            /* , NewHandle, Rea */
	$"6C6C 6F63 4861 6E64 6C65 2C20 5365 7450"            /* llocHandle, SetP */
	$"7472 5369 7A65 206F 7242 2020 2053 6574"            /* trSize orB   Set */
	$"4861 6E64 6C65 5369 7A65 2063 6865 636B"            /* HandleSize check */
	$"7320 7468 6520 6865 6170 2062 6566 6F72"            /* s the heap befor */
	$"6520 7468 6520 6361 6C6C 2E20 4966 2067"            /* e the call. If g */
	$"6F6F 6420 7468 656E 2074 6865 3C20 2020"            /* ood then the<    */
	$"6865 6170 2069 7320 7363 7261 6D62 6C65"            /* heap is scramble */
	$"642E 2049 6620 6261 6420 7468 656E 2061"            /* d. If bad then a */
	$"204D 6163 7342 7567 2062 7265 616B 2069"            /*  MacsBug break i */
	$"7320 666F 7263 6564 2E40 2020 2053 6372"            /* s forced.@   Scr */
	$"616D 626C 696E 6720 636F 6E74 696E 7565"            /* ambling continue */
	$"7320 756E 7469 6C20 6E65 7874 2048 5320"            /* s until next HS  */
	$"6F72 2061 2062 6164 2068 6561 7020 6973"            /* or a bad heap is */
	$"2064 6574 6563 7465 642E 0753 796D 626F"            /*  detected..Symbo */
	$"6C73 0952 4E20 5B65 7870 725D 4320 2020"            /* ls.RN [expr]C    */
	$"5365 7420 7468 6520 7265 736F 7572 6365"            /* Set the resource */
	$"2066 696C 6520 7265 6620 6E75 6D20 7175"            /*  file ref num qu */
	$"616C 6966 6965 7220 746F 2065 7870 722E"            /* alifier to expr. */
	$"2049 6620 6E6F 2065 7870 7220 7468 656E"            /*  If no expr then */
	$"4420 2020 7365 7420 6974 2074 6F20 6375"            /* D   set it to cu */
	$"724D 6170 2E20 4F6E 6365 2073 6574 2C20"            /* rMap. Once set,  */
	$"616C 6C20 7375 6273 6571 7565 6E74 2073"            /* all subsequent s */
	$"796D 626F 6C20 7265 6665 7265 6E63 6573"            /* ymbol references */
	$"206D 7573 7442 2020 2062 6520 6672 6F6D"            /*  mustB   be from */
	$"2061 2068 6561 7020 626C 6F63 6B20 7769"            /*  a heap block wi */
	$"7468 2061 206D 6174 6368 696E 6720 6669"            /* th a matching fi */
	$"6C65 2072 6566 206E 756D 2E20 4966 2065"            /* le ref num. If e */
	$"7870 7220 6973 2030 1A20 2020 7468 656E"            /* xpr is 0.   then */
	$"2061 6C6C 2073 796D 626F 6C73 206D 6174"            /*  all symbols mat */
	$"6368 2E02 5344 3D20 2020 436F 6D6D 616E"            /* ch..SD=   Comman */
	$"642D 3A20 6F72 2043 6F6D 6D61 6E64 2D44"            /* d-: or Command-D */
	$"2069 7320 6E6F 7720 7573 6564 2074 6F20"            /*  is now used to  */
	$"7365 6C65 6374 2073 796D 626F 6C20 6E61"            /* select symbol na */
	$"6D65 732E 0D53 5820 5B4F 4E20 7C20 4F46"            /* mes..SX [ON | OF */
	$"465D 4120 2020 5475 726E 2073 796D 626F"            /* F]A   Turn symbo */
	$"6C73 2069 6E20 6469 7361 7373 656D 626C"            /* ls in disassembl */
	$"7920 6F6E 206F 7220 6F66 662E 2054 6F67"            /* y on or off. Tog */
	$"676C 6520 6966 206E 6F20 7061 7261 6D65"            /* gle if no parame */
	$"7465 722E 0553 7461 636B 1353 4336 205B"            /* ter..Stack.SC6 [ */
	$"6164 6472 205B 6E62 7974 6573 5D5D 4020"            /* addr [nbytes]]@  */
	$"2020 5368 6F77 2074 6865 2063 616C 6C69"            /*   Show the calli */
	$"6E67 2063 6861 696E 2062 6173 6564 206F"            /* ng chain based o */
	$"6E20 4136 206C 696E 6B73 2E20 4966 206E"            /* n A6 links. If n */
	$"6F20 6164 6472 2074 6865 6E20 7468 6545"            /* o addr then theE */
	$"2020 2063 6861 696E 2073 7461 7274 7320"            /*    chain starts  */
	$"7769 7468 2041 362E 2049 6620 6164 6472"            /* with A6. If addr */
	$"2074 6865 6E20 7468 6520 6368 6169 6E20"            /*  then the chain  */
	$"7374 6172 7473 2061 7420 6164 6472 2E20"            /* starts at addr.  */
	$"4966 206E 6F41 2020 206E 6279 7465 7320"            /* If noA   nbytes  */
	$"7468 656E 2074 6865 2073 7461 636B 2062"            /* then the stack b */
	$"6173 6520 6973 2043 7572 5374 6163 6B42"            /* ase is CurStackB */
	$"6173 652E 2049 6620 6E62 7974 6573 2074"            /* ase. If nbytes t */
	$"6865 6E20 7468 651D 2020 2073 7461 636B"            /* hen the.   stack */
	$"2062 6173 6520 6973 2061 6464 722B 6E62"            /*  base is addr+nb */
	$"7974 6573 2E13 5343 3720 5B61 6464 7220"            /* ytes..SC7 [addr  */
	$"5B6E 6279 7465 735D 5D43 2020 2053 686F"            /* [nbytes]]C   Sho */
	$"7720 706F 7373 6962 6C65 2072 6574 7572"            /* w possible retur */
	$"6E20 6164 6472 6573 7365 7320 6F6E 2074"            /* n addresses on t */
	$"6865 2073 7461 636B 2E20 4120 7265 7475"            /* he stack. A retu */
	$"726E 2061 6464 7265 7373 2069 7345 2020"            /* rn address isE   */
	$"2061 6E20 6576 656E 2061 6464 7265 7373"            /*  an even address */
	$"2074 6861 7420 706F 696E 7473 2061 6674"            /*  that points aft */
	$"6572 2061 204A 5352 2C20 4253 5220 6F72"            /* er a JSR, BSR or */
	$"2041 2D54 7261 702E 2049 6620 6E6F 2061"            /*  A-Trap. If no a */
	$"6464 723F 2020 2074 6865 6E20 4137 2069"            /* ddr?   then A7 i */
	$"7320 7468 6520 7374 6163 6B20 706F 696E"            /* s the stack poin */
	$"7465 722E 2049 6620 6164 6472 2074 6865"            /* ter. If addr the */
	$"6E20 6164 6472 2069 7320 7468 6520 7374"            /* n addr is the st */
	$"6163 6B40 2020 2070 6F69 6E74 6572 2E20"            /* ack@   pointer.  */
	$"4966 206E 6F20 6E62 7974 6573 2074 6865"            /* If no nbytes the */
	$"6E20 7468 6520 7374 6163 6B20 6261 7365"            /* n the stack base */
	$"2069 7320 4375 7253 7461 636B 4261 7365"            /*  is CurStackBase */
	$"2E20 4966 2D20 2020 6E62 7974 6573 2074"            /* . If-   nbytes t */
	$"6865 6E20 7468 6520 7374 6163 6B20 6261"            /* hen the stack ba */
	$"7365 2069 7320 6164 6472 2B6E 6279 7465"            /* se is addr+nbyte */
	$"732E 064D 656D 6F72 793C 416C 6C20 636F"            /* s..Memory<All co */
	$"6D6D 616E 6473 2061 7373 756D 6520 7468"            /* mmands assume th */
	$"6520 646F 7420 6164 6472 6573 7320 6966"            /* e dot address if */
	$"206E 6F20 6164 6472 2069 7320 7370 6563"            /*  no addr is spec */
	$"6966 6965 642E 0025 444D 205B 6164 6472"            /* ified..%DM [addr */
	$"205B 6E20 7C20 7465 6D70 6C61 7465 207C"            /*  [n | template | */
	$"2062 6173 6963 2074 7970 655D 5D43 2020"            /*  basic type]]C   */
	$"2044 6973 706C 6179 206D 656D 6F72 7920"            /*  Display memory  */
	$"6672 6F6D 2061 6464 7220 666F 7220 6E20"            /* from addr for n  */
	$"6279 7465 7320 6F72 2061 7320 6465 6669"            /* bytes or as defi */
	$"6E65 6420 6279 2061 2074 656D 706C 6174"            /* ned by a templat */
	$"6545 2020 206F 7220 6120 6261 7369 6320"            /* eE   or a basic  */
	$"7479 7065 2E20 5468 6520 6261 7369 6320"            /* type. The basic  */
	$"7479 7065 7320 6172 6520 4279 7465 2C20"            /* types are Byte,  */
	$"576F 7264 2C20 4C6F 6E67 2C20 5369 676E"            /* Word, Long, Sign */
	$"6564 4279 7465 2C44 2020 2053 6967 6E65"            /* edByte,D   Signe */
	$"6457 6F72 642C 2053 6967 6E65 644C 6F6E"            /* dWord, SignedLon */
	$"672C 2055 6E73 6967 6E65 6442 7974 652C"            /* g, UnsignedByte, */
	$"2055 6E73 6967 6E65 6457 6F72 642C 2055"            /*  UnsignedWord, U */
	$"6E73 6967 6E65 644C 6F6E 672C 1720 2020"            /* nsignedLong,.    */
	$"5053 7472 696E 6720 616E 6420 4353 7472"            /* PString and CStr */
	$"696E 672E 0A54 4D50 205B 6E61 6D65 5D41"            /* ing..TMP [name]A */
	$"2020 204C 6973 7420 7465 6D70 6C61 7465"            /*    List template */
	$"7320 6E61 6D65 7320 7468 6174 206D 6174"            /* s names that mat */
	$"6368 206E 616D 652E 2049 6620 6E6F 206E"            /* ch name. If no n */
	$"616D 6520 7468 656E 206C 6973 7420 616C"            /* ame then list al */
	$"6C12 2020 2074 656D 706C 6174 6520 6E61"            /* l.   template na */
	$"6D65 732E 0944 5020 5B61 6464 725D 2A20"            /* mes..DP [addr]*  */
	$"2020 4469 7370 6C61 7920 6D65 6D6F 7279"            /*   Display memory */
	$"2066 726F 6D20 6164 6472 2066 6F72 2031"            /*  from addr for 1 */
	$"3238 2062 7974 6573 2E09 4442 205B 6164"            /* 28 bytes..DB [ad */
	$"6472 5D1C 2020 2044 6973 706C 6179 2074"            /* dr].   Display t */
	$"6865 2062 7974 6520 6174 2061 6464 722E"            /* he byte at addr. */
	$"0944 5720 5B61 6464 725D 1C20 2020 4469"            /* .DW [addr].   Di */
	$"7370 6C61 7920 7468 6520 776F 7264 2061"            /* splay the word a */
	$"7420 6164 6472 2E09 444C 205B 6164 6472"            /* t addr..DL [addr */
	$"5D1C 2020 2044 6973 706C 6179 2074 6865"            /* ].   Display the */
	$"206C 6F6E 6720 6174 2061 6464 722E 1B53"            /*  long at addr..S */
	$"4D20 6164 6472 2065 7870 7220 7C20 2773"            /* M addr expr | 's */
	$"7472 696E 6727 202E 2E2E 4220 2020 4173"            /* tring' ...B   As */
	$"7369 676E 2076 616C 7565 7320 746F 206D"            /* sign values to m */
	$"656D 6F72 7920 7374 6172 7469 6E67 2061"            /* emory starting a */
	$"7420 6164 6472 2E20 4561 6368 2076 616C"            /* t addr. Each val */
	$"7565 2064 6574 6572 6D69 6E65 7344 2020"            /* ue determinesD   */
	$"2074 6865 2061 7373 6967 6D65 6E74 2073"            /*  the assigment s */
	$"697A 652E 2053 7065 6369 6669 6320 7369"            /* ize. Specific si */
	$"7A65 7320 6361 6E20 6265 2073 6574 2075"            /* zes can be set u */
	$"7369 6E67 2053 422C 2053 5720 6F72 2053"            /* sing SB, SW or S */
	$"4C2E 1B53 4220 6164 6472 2065 7870 7220"            /* L..SB addr expr  */
	$"7C20 2773 7472 696E 6727 202E 2E2E 2B20"            /* | 'string' ...+  */
	$"2020 4173 7369 676E 2076 616C 7565 7320"            /*   Assign values  */
	$"746F 2062 7974 6573 2073 7461 7274 696E"            /* to bytes startin */
	$"6720 6174 2061 6464 722E 1B53 5720 6164"            /* g at addr..SW ad */
	$"6472 2065 7870 7220 7C20 2773 7472 696E"            /* dr expr | 'strin */
	$"6727 202E 2E2E 2B20 2020 4173 7369 676E"            /* g' ...+   Assign */
	$"2076 616C 7565 7320 746F 2077 6F72 6473"            /*  values to words */
	$"2073 7461 7274 696E 6720 6174 2061 6464"            /*  starting at add */
	$"722E 1B53 4C20 6164 6472 2065 7870 7220"            /* r..SL addr expr  */
	$"7C20 2773 7472 696E 6727 202E 2E2E 2B20"            /* | 'string' ...+  */
	$"2020 4173 7369 676E 2076 616C 7565 7320"            /*   Assign values  */
	$"746F 206C 6F6E 6773 2073 7461 7274 696E"            /* to longs startin */
	$"6720 6174 2061 6464 722E 0952 6567 6973"            /* g at addr..Regis */
	$"7465 7273 3E56 616C 7565 7320 6361 6E20"            /* ters>Values can  */
	$"6265 2061 7373 6967 6E65 6420 746F 2072"            /* be assigned to r */
	$"6567 6973 7465 7273 2077 6974 6820 636F"            /* egisters with co */
	$"6D6D 616E 6473 206F 6620 7468 6520 666F"            /* mmands of the fo */
	$"726D 3A3B 2020 5265 6769 7374 6572 4E61"            /* rm:;  RegisterNa */
	$"6D65 203A 3D20 6578 7072 6573 7369 6F6E"            /* me := expression */
	$"2020 6F72 2020 5265 6769 7374 6572 4E61"            /*   or  RegisterNa */
	$"6D65 203D 2065 7870 7265 7373 696F 6E00"            /* me = expression. */
	$"0254 4419 2020 2044 6973 706C 6179 2043"            /* .TD.   Display C */
	$"5055 2072 6567 6973 7465 7273 2E02 5446"            /* PU registers..TF */
	$"2A20 2020 4469 7370 6C61 7920 3638 3838"            /* *   Display 6888 */
	$"3120 666C 6F61 7469 6E67 2070 6F69 6E74"            /* 1 floating point */
	$"2072 6567 6973 7465 7273 2E02 544D 1F20"            /*  registers..TM.  */
	$"2020 4469 7370 6C61 7920 3638 3835 3120"            /*   Display 68851  */
	$"4D4D 5520 7265 6769 7374 6572 732E 0352"            /* MMU registers..R */
	$"4144 4320 2020 546F 6767 6C65 2062 6574"            /* ADC   Toggle bet */
	$"7765 656E 2073 7065 6369 6679 696E 6720"            /* ween specifying  */
	$"7265 6769 7374 6572 7320 6173 2052 416E"            /* registers as RAn */
	$"206F 7220 5244 6E20 616E 6420 7370 6563"            /*  or RDn and spec */
	$"6966 7969 6E67 4520 2020 7265 6769 7374"            /* ifyingE   regist */
	$"6572 7320 6173 2041 6E20 6F72 2044 6E2E"            /* ers as An or Dn. */
	$"2054 6865 2064 6566 6175 6C74 2073 6574"            /*  The default set */
	$"7469 6E67 2064 6F65 7320 6E6F 7420 7265"            /* ting does not re */
	$"7175 6972 6520 7468 6520 522E 064D 6163"            /* quire the R..Mac */
	$"726F 7315 4D43 206E 616D 6520 2765 7870"            /* ros.MC name 'exp */
	$"7227 207C 2065 7870 723E 2020 2044 6566"            /* r' | expr>   Def */
	$"696E 6520 6120 6D61 6372 6F20 6361 6C6C"            /* ine a macro call */
	$"6564 206E 616D 6520 7468 6174 2065 7870"            /* ed name that exp */
	$"616E 6473 2074 6F20 2765 7870 7227 206F"            /* ands to 'expr' o */
	$"7220 746F 2074 6865 1920 2020 6375 7272"            /* r to the.   curr */
	$"656E 7420 7661 6C75 6520 6F66 2065 7870"            /* ent value of exp */
	$"722E 0A4D 4343 205B 6E61 6D65 5D2E 2020"            /* r..MCC [name].   */
	$"2043 6C65 6172 206E 616D 6564 206D 6163"            /*  Clear named mac */
	$"726F 206F 7220 616C 6C20 6D61 6372 6F73"            /* ro or all macros */
	$"2069 6620 6E6F 206E 616D 652E 0A4D 4344"            /*  if no name..MCD */
	$"205B 6E61 6D65 5D40 2020 204C 6973 7420"            /*  [name]@   List  */
	$"6D61 6372 6F73 2074 6861 7420 6D61 7463"            /* macros that matc */
	$"6820 6E61 6D65 2E20 4966 206E 6F20 6E61"            /* h name. If no na */
	$"6D65 2074 6865 6E20 6C69 7374 2061 6C6C"            /* me then list all */
	$"206D 6163 726F 732E 0D4D 6973 6365 6C6C"            /*  macros..Miscell */
	$"616E 656F 7573 0F45 7363 6170 6520 6F72"            /* aneous.Escape or */
	$"2074 696C 6465 3920 2020 546F 6767 6C65"            /*  tilde9   Toggle */
	$"2062 6574 7765 656E 2074 6865 2075 7365"            /*  between the use */
	$"7220 7363 7265 656E 2061 6E64 2074 6865"            /* r screen and the */
	$"204D 6163 7342 7567 2073 6372 6565 6E2E"            /*  MacsBug screen. */
	$"0252 4226 2020 2055 6E6D 6F75 6E74 2074"            /* .RB&   Unmount t */
	$"6865 2062 6F6F 7420 766F 6C75 6D65 2061"            /* he boot volume a */
	$"6E64 2072 6562 6F6F 742E 0252 5338 2020"            /* nd reboot..RS8   */
	$"2055 6E6D 6F75 6E74 2061 6C6C 2076 6F6C"            /*  Unmount all vol */
	$"756D 6573 2065 7863 6570 7420 7365 7276"            /* umes except serv */
	$"6572 2076 6F6C 756D 6573 2061 6E64 2072"            /* er volumes and r */
	$"6562 6F6F 742E 0245 5320 2020 2045 7869"            /* eboot..ES    Exi */
	$"7420 7468 6520 6375 7272 656E 7420 6170"            /* t the current ap */
	$"706C 6963 6174 696F 6E2E 0245 4123 2020"            /* plication..EA#   */
	$"2052 6573 7461 7274 2074 6865 2063 7572"            /*  Restart the cur */
	$"7265 6E74 2061 7070 6C69 6361 7469 6F6E"            /* rent application */
	$"2E11 5748 205B 6164 6472 207C 2074 7261"            /* ..WH [addr | tra */
	$"7023 5D40 2020 2046 696E 6420 7468 6520"            /* p#]@   Find the  */
	$"6E61 6D65 2061 6E64 2061 6464 7220 6F66"            /* name and addr of */
	$"2074 6865 2070 6172 616D 6574 6572 2E20"            /*  the parameter.  */
	$"4966 206E 6F20 7061 7261 6D65 7465 7220"            /* If no parameter  */
	$"7468 656E 1020 2020 6173 7375 6D65 2057"            /* then.   assume W */
	$"4820 5043 2E03 484F 5734 2020 2044 6973"            /* H PC..HOW4   Dis */
	$"706C 6179 2074 6865 2072 6561 736F 6E20"            /* play the reason  */
	$"4D61 6373 4275 6720 7761 7320 656E 7465"            /* MacsBug was ente */
	$"7265 6420 7468 6973 2074 696D 652E 1D46"            /* red this time..F */
	$"2061 6464 7220 6E62 7974 6573 2065 7870"            /*  addr nbytes exp */
	$"7220 7C20 2773 7472 696E 6727 4320 2020"            /* r | 'string'C    */
	$"5365 6172 6368 2066 726F 6D20 6164 6472"            /* Search from addr */
	$"2074 6F20 6164 6472 2B6E 6279 7465 732D"            /*  to addr+nbytes- */
	$"3120 666F 7220 7468 6520 7061 7474 6572"            /* 1 for the patter */
	$"6E2E 2049 6620 7061 7474 6572 6E20 6973"            /* n. If pattern is */
	$"4420 2020 616E 2065 7870 7220 7468 656E"            /* D   an expr then */
	$"2074 6865 2077 6964 7468 206F 6620 7468"            /*  the width of th */
	$"6520 7061 7474 6572 6E20 6973 2074 6865"            /* e pattern is the */
	$"2073 6D61 6C6C 6573 7420 756E 6974 2028"            /*  smallest unit ( */
	$"6279 7465 2C29 2020 2077 6F72 6420 6F72"            /* byte,)   word or */
	$"206C 6F6E 6729 2074 6861 7420 636F 6E74"            /*  long) that cont */
	$"6169 6E73 2069 7473 2076 616C 7565 2E13"            /* ains its value.. */
	$"4642 2061 6464 7220 6E62 7974 6573 2065"            /* FB addr nbytes e */
	$"7870 7232 2020 2053 6561 7263 6820 6672"            /* xpr2   Search fr */
	$"6F6D 2061 6464 7220 746F 2061 6464 722B"            /* om addr to addr+ */
	$"6E62 7974 6573 2D31 2066 6F72 2074 6865"            /* nbytes-1 for the */
	$"2062 7974 652E 1346 5720 6164 6472 206E"            /*  byte..FW addr n */
	$"6279 7465 7320 6578 7072 3220 2020 5365"            /* bytes expr2   Se */
	$"6172 6368 2066 726F 6D20 6164 6472 2074"            /* arch from addr t */
	$"6F20 6164 6472 2B6E 6279 7465 732D 3120"            /* o addr+nbytes-1  */
	$"666F 7220 7468 6520 776F 7264 2E13 464C"            /* for the word..FL */
	$"2061 6464 7220 6E62 7974 6573 2065 7870"            /*  addr nbytes exp */
	$"7232 2020 2053 6561 7263 6820 6672 6F6D"            /* r2   Search from */
	$"2061 6464 7220 746F 2061 6464 722B 6E62"            /*  addr to addr+nb */
	$"7974 6573 2D31 2066 6F72 2074 6865 206C"            /* ytes-1 for the l */
	$"6F6E 672E 1346 5020 6164 6472 206E 6279"            /* ong..FP addr nby */
	$"7465 7320 6578 7072 3520 2020 5365 6172"            /* tes expr5   Sear */
	$"6368 2066 726F 6D20 6164 6472 2074 6F20"            /* ch from addr to  */
	$"6164 6472 2B6E 6279 7465 732D 3120 666F"            /* addr+nbytes-1 fo */
	$"7220 7468 6520 706F 696E 7465 722E 1043"            /* r the pointer..C */
	$"5320 5B61 6464 7220 5B61 6464 725D 5D41"            /* S [addr [addr]]A */
	$"2020 2043 6865 636B 7375 6D20 6164 6472"            /*    Checksum addr */
	$"2072 616E 6765 2061 6E64 2073 746F 7265"            /*  range and store */
	$"2074 6865 2076 616C 7565 2E20 4353 2077"            /*  the value. CS w */
	$"6974 686F 7574 2070 6172 616D 6574 6572"            /* ithout parameter */
	$"7343 2020 2063 6865 636B 7375 6D73 2074"            /* sC   checksums t */
	$"6865 206C 6173 7420 6164 6472 2072 616E"            /* he last addr ran */
	$"6765 2061 6E64 2063 6F6D 7061 7265 7320"            /* ge and compares  */
	$"6974 2074 6F20 7468 6520 6C61 7374 2076"            /* it to the last v */
	$"616C 7565 2E39 2020 2049 6620 6E6F 2073"            /* alue.9   If no s */
	$"6563 6F6E 6420 6164 6472 2074 6865 6E20"            /* econd addr then  */
	$"6368 6563 6B73 756D 2074 6865 206C 6F6E"            /* checksum the lon */
	$"6720 776F 7264 2061 7420 6164 6472 2E18"            /* g word at addr.. */
	$"4C4F 4720 5B70 6174 686E 616D 6520 7C20"            /* LOG [pathname |  */
	$"5072 696E 7465 725D 4120 2020 4C6F 6720"            /* Printer]A   Log  */
	$"616C 6C20 4D61 6373 4275 6720 6F75 7470"            /* all MacsBug outp */
	$"7574 2074 6F20 6120 6669 6C65 206F 7220"            /* ut to a file or  */
	$"746F 2061 6E20 496D 6167 6557 7269 7465"            /* to an ImageWrite */
	$"7220 7072 696E 7465 722E 2C20 2020 4C4F"            /* r printer.,   LO */
	$"4720 7769 7468 6F75 7420 7061 7261 6D65"            /* G without parame */
	$"7465 7273 2074 7572 6E73 206C 6F67 6769"            /* ters turns loggi */
	$"6E67 206F 6666 2E27 5348 4F57 205B 6164"            /* ng off.'SHOW [ad */
	$"6472 207C 2027 6164 6472 2720 5B20 4C20"            /* dr | 'addr' [ L  */
	$"7C20 4C41 207C 2057 207C 2041 205D 5D42"            /* | LA | W | A ]]B */
	$"2020 2044 6973 706C 6179 206D 656D 6F72"            /*    Display memor */
	$"7920 6174 2061 6464 7220 696E 2073 7461"            /* y at addr in sta */
	$"7475 7320 7265 6769 6F6E 2E20 5175 6F74"            /* tus region. Quot */
	$"696E 6720 6164 6472 2063 6175 7365 7320"            /* ing addr causes  */
	$"6974 4120 2020 746F 2062 6520 6576 616C"            /* itA   to be eval */
	$"7561 7465 6420 6561 6368 2074 696D 6520"            /* uated each time  */
	$"7468 6520 6469 7370 6C61 7920 6973 2075"            /* the display is u */
	$"7064 6174 6564 2E20 5348 4F57 2077 6974"            /* pdated. SHOW wit */
	$"686F 7574 3E20 2020 7061 7261 6D65 7465"            /* hout>   paramete */
	$"7273 2063 7963 6C65 7320 7468 7275 2074"            /* rs cycles thru t */
	$"6865 2064 6973 706C 6179 2066 6F72 6D61"            /* he display forma */
	$"7473 2E20 5468 6520 666F 726D 6174 7320"            /* ts. The formats  */
	$"6172 6513 2020 2020 204C 3A20 204C 6F6E"            /* are.     L:  Lon */
	$"6720 776F 7264 7327 2020 2020 204C 413A"            /* g words'     LA: */
	$"2043 6F6D 6269 6E61 7469 6F6E 206F 6620"            /*  Combination of  */
	$"4C6F 6E67 7320 616E 6420 4153 4349 490E"            /* Longs and ASCII. */
	$"2020 2020 2057 3A20 2057 6F72 6473 1320"            /*      W:  Words.  */
	$"2020 2020 413A 2020 4153 4349 4920 5465"            /*     A:  ASCII Te */
	$"7874 0453 5741 5039 2020 2049 6620 796F"            /* xt.SWAP9   If yo */
	$"7520 6861 7665 2061 2073 696E 676C 6520"            /* u have a single  */
	$"7363 7265 656E 2074 6865 6E20 5357 4150"            /* screen then SWAP */
	$"2074 6F67 676C 6573 2062 6574 7765 656E"            /*  toggles between */
	$"3A39 2020 2020 2044 7261 7769 6E67 2073"            /* :9     Drawing s */
	$"7465 7020 616E 6420 412D 5472 6170 2074"            /* tep and A-Trap t */
	$"7261 6365 2069 6E66 6F20 7769 7468 6F75"            /* race info withou */
	$"7420 7377 6170 7069 6E67 2E38 2020 2020"            /* t swapping.8     */
	$"2044 7261 7720 7374 6570 2061 6E64 2041"            /*  Draw step and A */
	$"2D54 7261 7020 7472 6163 6520 696E 666F"            /* -Trap trace info */
	$"2061 6E64 2073 7761 7020 6561 6368 2074"            /*  and swap each t */
	$"696D 652E 3A20 2020 4966 2079 6F75 2068"            /* ime.:   If you h */
	$"6176 6520 6D75 6C74 6970 6C65 2073 6372"            /* ave multiple scr */
	$"6565 6E73 2074 6865 6E20 5357 4150 2074"            /* eens then SWAP t */
	$"6F67 676C 6573 2062 6574 7765 656E 3A26"            /* oggles between:& */
	$"2020 2020 204D 6163 7342 7567 2073 6372"            /*      MacsBug scr */
	$"6565 6E20 6973 2061 6C77 6179 7320 7669"            /* een is always vi */
	$"7369 626C 652E 2E20 2020 2020 4D61 6373"            /* sible..     Macs */
	$"4275 6720 7363 7265 656E 2069 7320 7669"            /* Bug screen is vi */
	$"7369 626C 6520 6F6E 6C79 2061 7420 6272"            /* sible only at br */
	$"6561 6B73 2E0D 4458 205B 4F4E 207C 204F"            /* eaks..DX [ON | O */
	$"4646 5D43 2020 2054 7572 6E20 7573 6572"            /* FF]C   Turn user */
	$"2062 7265 616B 7320 2841 3946 462C 2041"            /*  breaks (A9FF, A */
	$"4246 4629 206F 6E20 6F72 206F 6666 2E20"            /* BFF) on or off.  */
	$"546F 6767 6C65 2069 6620 6E6F 2070 6172"            /* Toggle if no par */
	$"616D 6574 6572 2E02 4456 1B20 2020 4469"            /* ameter..DV.   Di */
	$"7370 6C61 7920 4D61 6373 4275 6720 7665"            /* splay MacsBug ve */
	$"7273 696F 6E2E 1248 454C 5020 5B63 6D64"            /* rsion..HELP [cmd */
	$"207C 2074 6F70 6963 5D42 2020 2044 6973"            /*  | topic]B   Dis */
	$"706C 6179 2069 6E66 6F20 6162 6F75 7420"            /* play info about  */
	$"6120 7370 6563 6966 6963 2063 6F6D 6D61"            /* a specific comma */
	$"6E64 206F 7220 746F 7069 632E 2049 6620"            /* nd or topic. If  */
	$"6E6F 2070 6172 616D 6574 6572 1B20 2020"            /* no parameter.    */
	$"7468 656E 2064 6973 706C 6179 2061 6C6C"            /* then display all */
	$"2074 6F70 6963 732E 0564 636D 6473"                 /*  topics..dcmds */
};

